
// CONSTANTES POUR LE GAME DESIGN
StrategicIAStratConstantes is TIAStratStrategicConstantesDescriptor
(
    NbAirplanesToKeepBeforeUsingAirDeny = 3
    NbAirplanesToKeepBeforeUsingBombard = 1
    NbMaxPawnAllowedToFortifyPerObjective = 0

    DistanceMaxToAssignPawnToExistingGroup = 3000.0 * Metre
    DistanceMaxForPawnToBeAvailableForCurrentObjective = 1500.0 * Metre

    NumberMaxOfProductionPerTurn = 3

    MaxFatigueToBeSelectedForStrategicBattle = 3

    // Par defaut, tous les Fighter et AuxiliarySupport se placent au plus près de l'ennemi
    PawnWithTagToPlaceFarthestFromEnemy = [
        "AntiAir",
    ]

    NbApToKeepAfterMoveWithTargetForBattleRole = MAP
    [
        (EStrategicBattleRole/GroundSupport,
            [
                (4, 5000 * Metre),
            ]
        ),
        (EStrategicBattleRole/Fighter,
            [
                (4, 2000 * Metre),
            ]
        ),
    ]

    StartBattleDescriptorByType = MAP
    [
        (
            EStrategicBattleDescriptor/Default,
            TIAStartBattleDescriptor
            (
                MinVictoryNeededToAttackForObjectiveStatus =
                [
                    EVictoryType/Draw,  //NotActive
                    EVictoryType/Draw,  //ToDefend
                    EVictoryType/MinorDefeat,  //ToCapture
                    EVictoryType/Draw,  //CapturedNotActive
                ]
            )
        ),
        (
            EStrategicBattleDescriptor/SuicideAttack,
            TIAStartBattleDescriptor
            (
                MinVictoryNeededToAttackForObjectiveStatus =
                [
                    EVictoryType/TotalDefeat,   //NotActive
                    EVictoryType/TotalDefeat,   //ToDefend
                    EVictoryType/TotalDefeat,   //ToCapture
                    EVictoryType/TotalDefeat,   //CapturedNotActive
                ]
            )
        ),
        (
            EStrategicBattleDescriptor/MajorDefeat,
            TIAStartBattleDescriptor
            (
                MinVictoryNeededToAttackForObjectiveStatus =
                [
                    EVictoryType/MajorDefeat,   //NotActive
                    EVictoryType/MajorDefeat,   //ToDefend
                    EVictoryType/MajorDefeat,   //ToCapture
                    EVictoryType/MajorDefeat,   //CapturedNotActive
                ]
            )
        ),
        (
            EStrategicBattleDescriptor/MinorDefeat,
            TIAStartBattleDescriptor
            (
                MinVictoryNeededToAttackForObjectiveStatus =
                [
                    EVictoryType/MinorDefeat,   //NotActive
                    EVictoryType/MinorDefeat,   //ToDefend
                    EVictoryType/MinorDefeat,   //ToCapture
                    EVictoryType/MinorDefeat,   //CapturedNotActive
                ]
            )
        ),
        (
            EStrategicBattleDescriptor/Agressif,
            TIAStartBattleDescriptor
            (
                MinVictoryNeededToAttackForObjectiveStatus =
                [
                    EVictoryType/MinorDefeat,   //NotActive
                    EVictoryType/MinorDefeat,   //ToDefend
                    EVictoryType/MinorDefeat,   //ToCapture
                    EVictoryType/MinorDefeat,   //CapturedNotActive
                ]
            )
        ),
        (
            EStrategicBattleDescriptor/Defensif, // utilise pour les pions en défense et fortifiés
            TIAStartBattleDescriptor
            (
                MinVictoryNeededToAttackForObjectiveStatus =
                [
                    EVictoryType/MinorVictory,   //NotActive
                    EVictoryType/MinorVictory,   //ToDefend
                    EVictoryType/Draw,   //ToCapture
                    EVictoryType/MinorVictory,   //CapturedNotActive
                ]
            )
        ),
        (
            EStrategicBattleDescriptor/Draw,
            TIAStartBattleDescriptor
            (
                MinVictoryNeededToAttackForObjectiveStatus =
                [
                    EVictoryType/Draw,   //NotActive
                    EVictoryType/Draw,   //ToDefend
                    EVictoryType/Draw,   //ToCapture
                    EVictoryType/Draw,   //CapturedNotActive
                ]
            )
        ),
        (
            EStrategicBattleDescriptor/MinorVictor,
            TIAStartBattleDescriptor
            (
                MinVictoryNeededToAttackForObjectiveStatus =
                [
                    EVictoryType/MinorVictory,   //NotActive
                    EVictoryType/MinorVictory,   //ToDefend
                    EVictoryType/MinorVictory,   //ToCapture
                    EVictoryType/MinorVictory,   //CapturedNotActive
                ]
            )
        ),
        (
            EStrategicBattleDescriptor/MajorVictor,
            TIAStartBattleDescriptor
            (
                MinVictoryNeededToAttackForObjectiveStatus =
                [
                    EVictoryType/MajorVictory,   //NotActive
                    EVictoryType/MajorVictory,   //ToDefend
                    EVictoryType/MajorVictory,   //ToCapture
                    EVictoryType/MajorVictory,   //CapturedNotActive
                ]
            )
        ),
    ]

    BombardTargetMinimumPowerValue = 5000.0

    MinUnitWeightToReserveCorridor = 15.0
    UnitTagAndWeightToReserveCorridor = MAP
    [
        ( "Infanterie", 1.0 ),
        ( "Char", 0.5 ),
    ]

    DefenseBonusByTerrainType = MAP
    [
        (~/ETerrainType/StrategicForest, 0.33),
        (~/ETerrainType/StrategicSemiUrban, 0.66),
        (~/ETerrainType/Urbain, 1),
    ]

    NumberPositionRankToPlaceUnits = 3
    MinimumRankForWeakestBattleUnitDefensePoint = 0 //Attention, ça commence à 0
    MinimumRankForStrongestBattleUnitDefensePoint = 1 //Attention, ça commence à 0
    MinimumRankForWeakestBattleUnitAttackPoint = 0 //Attention, ça commence à 0
    MinimumRankForStrongestBattleUnitAttackPoint = 0 //Attention, ça commence à 0
    MinimumRankForSupportUnit = 2 //Attention, ça commence à 0

    GroupPoolsSortedByPriority =
    [
        TIAGroupPool
        (
            Name = "AntiAir"
            PossibleTags = ["AntiAir"]
            NbMaxPawns = 1
        ),
        TIAGroupPool
        (
            Name = "DefaultGroup"
            PossibleTags = ["AllUnits"]
            MaxPowerValue = 25000.0
        ),
    ]

    NbGroupMaxPerObjective = MAP
    [
        (
            "AntiAir",
            1
        ),
    ]
)
